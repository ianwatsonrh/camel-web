<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/cxf
       http://camel.apache.org/schema/cxf/camel-cxf-spring.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- H2 Datasource -->
    <bean id="usecaseDB" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:~/test"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!-- SQL Component -->
    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
		
    </bean>

	<bean id="sqlBean" class="org.globex.usecase.ProcessorBean"/>
	
	<!-- <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider"/>-->
	<!-- <bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>-->

  <cxf:cxfEndpoint id="customerWebservice"
                     address="http://localhost:9092/ws/customerService"
                     wsdlURL="META-INF/wsdl/CustomerWS.wsdl"
                     serviceClass="org.globex.usecase.service.CustomerWSImpl">
    </cxf:cxfEndpoint>


     <cxf:rsServer id="customerRestService" address="http://localhost:9000" 
    serviceClass="org.globex.usecase.service.CustomerRest" 
    loggingFeatureEnabled="true" loggingSizeLimit="20" skipFaultLogging="true">
    <cxf:providers>
       <ref bean="jsonProvider"/>
    </cxf:providers>
  </cxf:rsServer>
  
  <bean id="jsonProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
   <cxf:rsClient id="customerRestServiceClient" address="http://localhost:9000" serviceClass="org.globex.usecase.service.CustomerRest"
   loggingFeatureEnabled="true" skipFaultLogging="true" >
   	<cxf:providers>
       <ref bean="jsonProvider"/>
    </cxf:providers>
    </cxf:rsClient>

	<bean id="changeGeo" class="org.globex.usecase.service.ChangeGeo"/>
	
	<bean id="customer" class="org.globex.usecase.service.CustomerWSImpl"/>
	<bean id="aggregationStrategy" class="org.globex.usecase.AccountAggregator"/>

    <camelContext trace="false" xmlns="http://camel.apache.org/schema/spring">
  <propertyPlaceholder location="fabric8/route.properties" id="properties"/>
  <dataFormats>
    <json library="Jackson" unmarshalTypeName="org.globex.Account" id="json"/>
  </dataFormats>
  <route id="RestService">
    <from uri="cxfrs:bean:customerRestService?bindingStyle=SimpleConsumer"/>
    <bean ref="changeGeo"/>
  </route>
  <route id="WebService">
    <from uri="cxf:bean:customerWebservice"/>
    <log message="Body has been recieved -&gt; ${body}"/>
    <bean ref="customer" method="updateAccount"/>
  </route>
  <route id="Process">
    <from uri="file://src/data/inbox?noop=true&amp;include=(.)*.json"/>
    <log message="Body is -&gt; ${body}"/>
    <unmarshal ref="json"/>
    <multicast strategyRef="aggregationStrategy" parallelProcessing="true">
    	<to uri="direct:callRestEndpoint"/>
    	<to uri="direct:callWSEndpoint"/>
    </multicast>
    <to uri="direct:dbInsert"/>
  </route>
  <route id="InvokeRestService">
    <from uri="direct:callRestEndpoint"/>
    <log message="Calling rest service with body -&gt; ${body}"/>
    <log message="Headers -&gt; ${headers}"/>
    <setHeader headerName="Content-Type">
    	<constant>application/json</constant>
    </setHeader>
    <setHeader headerName="Exchange.HTTP_PATH">
    	<constant>/customer/enrich</constant>
    </setHeader>
    <to uri="cxfrs:bean:customerRestServiceClient"/>
    <log message="Rest service called with ${body}"/>
  </route>
  
  <route id="InvokeWebService">
  	<from uri="direct:callWSEndpoint"/>
  	<log message="Invoking Endpoint"/>
  	<to uri="cxf:bean:customerWebservice"/>
  </route>
  
  <route id="DBInsert">
  	<from uri="direct:dbInsert"/>
  	<log message="Insert into DB"/>
  	<bean ref="sqlBean" method="defineNamedParameters"/>
  	<!-- <to uri="sql:classpath:sql/insert.sql?dataSource=usecaseDB"/>-->
  	<to uri="sql:insert into usecase.t_account (
CLIENT_ID ,
SALES_CONTACT ,
COMPANY_NAME ,
COMPANY_GEO  ,
COMPANY_ACTIVE ,
CONTACT_FIRST_NAME ,
CONTACT_LAST_NAME ,
CONTACT_ADDRESS,
CONTACT_CITY,
CONTACT_STATE,
CONTACT_ZIP,
CONTACT_PHONE ,
CREATION_DATE ,
CREATION_USER)
values (
:#CLIENT_ID ,
:#SALES_CONTACT ,
:#COMPANY_NAME ,
:#COMPANY_GEO  ,
:#COMPANY_ACTIVE ,
:#CONTACT_FIRST_NAME ,
:#CONTACT_LAST_NAME ,
:#CONTACT_ADDRESS,
:#CONTACT_CITY,
:#CONTACT_STATE,
:#CONTACT_ZIP,
:#CONTACT_PHONE ,
:#CREATION_DATE ,
:#CREATION_USER
);?dataSource=usecaseDB"/>
  	<log message="Body -> ${body}"/>
  </route>
  
  
  <route id="SQLTest">
  	<from uri="timer://foo?fixedRate=true&amp;period=5s"/>
  	<log message="Invoking SQL"/>
  	<to uri="sql:select * from usecase.t_account?dataSource=usecaseDB"/>
  	<log message="Body is -> ${body}"/>
  </route>
  
</camelContext>
</beans>